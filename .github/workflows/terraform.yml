name: 'Terraform'

on:
  push:
    branches:
      - 'main' # 나중에 스테이지 명으로 변경
  pull_request:
    branches:
      - 'main'
    paths-ignore:
      - '**/terraform.yml'
  delete:
    branches:
      - 'feature/*'  # feature 브랜치 삭제 시 destroy 실행
  workflow_dispatch:
    inputs:
      confirm_destroy:
        description: 'Confirm if you want to destroy the Terraform backend (type DESTROY to confirm)'
        required: true
        default: 'DESTROY'

env:
  AWS_REGION: us-east-1  # AWS 리전 설정
  CLUSTER_NAME: eks-cluster-dev

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    if: github.event_name != 'workflow_dispatch' || github.event.inputs.confirm_destroy != 'DESTROY'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.TF_NILLA_AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.TF_NILLA_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init
        run: |
          cd terraform_stage
          terraform init

      - name: Terraform Plan
        run: |
          cd terraform_stage
          terraform plan -input=false

      - name: Terraform Apply
        run: |
          cd terraform_stage
          terraform apply -auto-approve -input=false

      # aws-auth 설정용 kubectl 설치 및 apply
      - name: Install kubectl
        run: |
          curl -LO "https://s3.us-west-2.amazonaws.com/amazon-eks/1.31.3/2024-12-12/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin

      - name: Update Kubeconfig
        run: |
          aws eks update-kubeconfig --region $AWS_REGION --name $CLUSTER_NAME

      - name: Patch aws-auth ConfigMap for Bastion Role
        run: |
          cat <<EOF | kubectl apply -f -
          apiVersion: v1
          kind: ConfigMap
          metadata:
            name: aws-auth
            namespace: kube-system
          data:
            mapRoles: |
              - rolearn: arn:aws:iam::<ACCOUNT_ID>:role/bastion-role-dev-0425
                username: bastion-user
                groups:
                  - system:masters
          EOF
  
  destroy:
    name: 'Terraform Destroy'
    runs-on: ubuntu-latest
    if: github.event_name == 'delete' || (github.event_name == 'workflow_dispatch' && github.event.inputs.confirm_destroy == 'DESTROY')
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.TF_NILLA_AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.TF_NILLA_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init 
        run: |
          cd terraform_stage
          terraform init -reconfigure  # 백엔드 초기화 실행

      - name: Terraform Destroy
        run: |
          cd terraform_stage
          terraform destroy -auto-approve -input=false
