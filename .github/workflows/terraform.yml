name: 'Terraform'

on:
  push:
    branches:
      - 'master' # 나중에 스테이지 명으로 변경
  pull_request:
    branches:
      - 'master'
    paths-ignore:
      - '**/stage-terraform.yml'
  delete:
    branches:
      - 'feature/*'  # feature 브랜치 삭제 시 destroy 실행
  workflow_dispatch:
    inputs:
      confirm_destroy:
        description: 'Confirm if you want to destroy the Terraform backend (type DESTROY to confirm)'
        required: true
        default: 'DESTROY'

env:
  AWS_REGION: us-east-1  # AWS 리전 설정

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.TF_NILLA_AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.TF_NILLA_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init
        run: |
          cd terraform_stage
          terraform init

      - name: Terraform Plan
        run: |
          cd terraform_stage
          terraform plan -input=false

      - name: Terraform Apply
        run: |
          cd terraform_stage
          terraform apply -auto-approve -input=false

  backend_destroy:
    runs-on: ubuntu-latest
    needs: terraform
    if: github.event.inputs.confirm_destroy == 'DESTROY' || github.event.pull_request.merged == true || github.event_name == 'delete'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: '1.8.0'

      - name: Confirm Destruction
        run: |
          echo "Destruction confirmed. Proceeding with Terraform destroy operation."

      - name: Terraform Init for Destroy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.TF_NILLA_AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.TF_NILLA_AWS_SECRET_ACCESS_KEY }}
        run: |
          cd terraform_stage
          terraform init \
            -backend-config="region=us-east-1" \
            -backend-config="bucket=nilla-terraform-lock" \
            -backend-config="key=stage/terraform/terraform.tfstate"

      - name: Terraform Destroy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.TF_NILLA_AWS_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.TF_NILLA_AWS_SECRET_ACCESS_KEY }}
        run: |
          cd terraform_stage
          terraform destroy -auto-approve
